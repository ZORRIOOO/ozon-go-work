version: "3.8"

services:
  database:
    container_name: database
    image: postgres:16
    restart: unless-stopped
    volumes:
      - ./postgresql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: [ "postgres" ]
    environment:
      POSTGRES_DB: homework
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
  
  cart:
    container_name: cart
    build:
      context: ./cart
      dockerfile: Dockerfile
    ports:
      - "8082:8082"

  loms:
    container_name: loms
    build:
      context: ./loms
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
      - "8081:8081"
  
  kafka-ui:
    container_name: kafka-broker-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      DYNAMIC_CONFIG_ENABLED: "true"

  kafka:
    container_name: kafka-broker
    image: confluentinc/cp-kafka:7.7.1.arm64
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
  
  kafka-init-topics:
    container_name: init-topics
    image: confluentinc/cp-kafka:7.7.1.arm64
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:29092 1 30 && \
      kafka-topics --create --topic loms.order-events --partitions 2 \
      --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092'"
